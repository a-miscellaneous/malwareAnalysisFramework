def generate_combinations(nums):
    def backtrack(start, path):
        result.append(path[:])  # Add a copy of the current combination to the result
        for i in range(start, len(nums)):
            path.append(nums[i])  # Include the current number in the combination
            backtrack(i + 1, path)  # Recur with the next index
            path.pop()  # Backtrack (remove the last element) to explore other possibilities

    result = []
    backtrack(0, [])  # Start the recursive process from index 0 with an empty combination
    result.pop(0)
    return result



